{
  "name": "fastmcp-code-pipeline-server",
  "version": "2.2.0",
  "description": "FastMCP 2.x server for BMC AMI DevX Code Pipeline with Streamable HTTP transport and JWT authentication",
  "keywords": ["fastmcp", "mcp", "bmc", "ami", "devx", "code-pipeline", "mainframe", "devops", "streamable-http", "jwt"],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/bmc-software/fastmcp-code-pipeline-server.git"
  },
  "scripts": {
    "dev": ".venv/bin/python openapi_server.py",
    "dev:full": "./scripts/dev.sh",
    "start": ".venv/bin/python openapi_server.py",
    "setup": "./scripts/setup.sh",
    "test": ".venv/bin/python -m pytest",
    "test:full": "./scripts/test.sh",
    "test:coverage": ".venv/bin/python -m pytest --cov=. --cov-report=html --cov-report=term",
    "test:watch": ".venv/bin/python -m pytest -f",
    "coverage": "./scripts/coverage.sh",
    "deploy": "./scripts/deploy.sh",
    "lint": ".venv/bin/python -m flake8 *.py",
    "lint:fix": ".venv/bin/python -m autoflake --remove-all-unused-imports --remove-unused-variables --in-place *.py && .venv/bin/python -m isort *.py && .venv/bin/python -m black *.py",
    "format": ".venv/bin/python -m black *.py",
    "format:check": ".venv/bin/python -m black --check *.py",
    "imports:fix": ".venv/bin/python -m autoflake --remove-all-unused-imports --remove-unused-variables --in-place *.py",
    "imports:check": ".venv/bin/python -m autoflake --check --remove-all-unused-imports --remove-unused-variables *.py",
    "style:fix": ".venv/bin/python -m isort *.py && .venv/bin/python -m black *.py",
    "style:check": ".venv/bin/python -m isort --check-only *.py && .venv/bin/python -m black --check *.py",
    "pre-commit:install": "pre-commit install",
    "pre-commit:run": "pre-commit run --all-files",
    "clean": "rm -rf __pycache__ .pytest_cache .coverage htmlcov *.pyc",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up --build",
    "docker:down": "docker-compose down",
    "health": "curl -f http://localhost:8080/health || exit 1",
    "health:full": "./scripts/health.sh"
  },
  "engines": {
    "python": ">=3.9.0"
  }
}
